-- =======================================================================
-- Script to create and query the `order_data` table with XML storage
-- =======================================================================

-- Create the `order_data` table
CREATE TABLE order_data (
    order_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- Unique identifier for each order
    order_date DATE NOT NULL,                                             -- Date of the order
    customer_details XMLTYPE,                                            -- Customer details stored in XML
    order_details XMLTYPE                                                -- Order details stored in XML
) XMLTYPE COLUMN order_details STORE AS BINARY XML;                      -- Optimize storage for XML data

-- =======================================================================
-- Query to extract and filter XML data
-- =======================================================================

-- Adjust the session to handle numeric formats properly
ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '. ';

-- Extract specific fields from the XML stored in the `order_details` column
SELECT o.order_id,
       o.order_date,
       x."START" AS start_time,   -- Extracted start time from the XML
       x.PRODUCT,                 -- Extracted product name from the XML
       x.PRICE                    -- Extracted price as a number from the XML
FROM order_data o,
     XMLTABLE(
         '/data/row' PASSING o.order_details
         COLUMNS
             "START" VARCHAR2(50) PATH 'START', -- XPath for start time
             PRODUCT VARCHAR2(50) PATH 'PRODUCT', -- XPath for product name
             PRICE NUMBER PATH 'PRICE'          -- XPath for price
     ) x
WHERE x."START" = '2024-10-25 01:00:00'; -- Filter for a specific start time

-- =======================================================================
-- Notes on storage and performance
-- =======================================================================
-- 1. 1000 XML records were inserted into the table.
-- 2. Query to fetch 400 rows took approximately 38 seconds.
-- 3. Original XML size: 16 MB per record. With 74000 lines.
-- 4. Storage usage (based on DBA_SEGMENTS output):
--    - SYS_LOB0000074335C00006$$ (LOBSEGMENT): 7416.19 MB
--    - SYS_LOB0000074335C00004$$ (LOBSEGMENT): 0.13 MB
--    - ORDER_DATA (Table): 0.13 MB
